FILE
  JuliaStatementsImpl(STATEMENTS)
    JuliaFunctionImpl(FUNCTION)
      PsiElement(FUNCTION_KEYWORD)('function')
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('add')
      JuliaFunctionSignatureImpl(FUNCTION_SIGNATURE)
        PsiElement(LEFT_BRACKET)('(')
        JuliaTypedNamedVariableImpl(TYPED_NAMED_VARIABLE)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('x')
        PsiElement(COMMA_SYM)(',')
        JuliaTypedNamedVariableImpl(TYPED_NAMED_VARIABLE)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('y')
        PsiElement(RIGHT_BRACKET)(')')
      PsiElement(EOL)('\n')
      JuliaStatementsImpl(STATEMENTS)
        JuliaApplyFunctionOpImpl(APPLY_FUNCTION_OP)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('println')
          PsiElement(LEFT_BRACKET)('(')
          JuliaStringImpl(STRING)
            PsiElement(QUOTE_START)('"')
            JuliaStringContentImpl(STRING_CONTENT)
              PsiElement(REGULAR_STRING_PART_LITERAL)('x is ')
            JuliaTemplateImpl(TEMPLATE)
              PsiElement(SHORT_INTERPOLATE_SYM)('$')
              JuliaSymbolImpl(SYMBOL)
                PsiElement(SYM)('x')
            JuliaStringContentImpl(STRING_CONTENT)
              PsiElement(REGULAR_STRING_PART_LITERAL)(' and y is ')
            JuliaTemplateImpl(TEMPLATE)
              PsiElement(SHORT_INTERPOLATE_SYM)('$')
              JuliaSymbolImpl(SYMBOL)
                PsiElement(SYM)('y')
            PsiElement(QUOTE_END)('"')
          PsiElement(RIGHT_BRACKET)(')')
        PsiElement(EOL)('\n')
        PsiComment(LINE_COMMENT)('# Functions return the value of their last statement')
        PsiElement(EOL)('\n')
        JuliaPlusLevelOpImpl(PLUS_LEVEL_OP)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('x')
          JuliaPlusLevelOperatorImpl(PLUS_LEVEL_OPERATOR)
            PsiElement(PLUS_SYM)('+')
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('y')
        PsiElement(EOL)('\n')
      PsiElement(END_KEYWORD)('end')
    PsiElement(EOL)('\n\n')
    JuliaApplyFunctionOpImpl(APPLY_FUNCTION_OP)
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('add')
      PsiElement(LEFT_BRACKET)('(')
      JuliaIntegerImpl(INTEGER)
        PsiElement(INT_LITERAL)('5')
      PsiElement(COMMA_SYM)(',')
      JuliaIntegerImpl(INTEGER)
        PsiElement(INT_LITERAL)('6')
      PsiElement(RIGHT_BRACKET)(')')
    PsiComment(LINE_COMMENT)('# => 11 after printing out "x is 5 and y is 6"')
    PsiElement(EOL)('\n')
    PsiComment(LINE_COMMENT)('# Compact assignment of functions')
    PsiElement(EOL)('\n')
    JuliaCompactFunctionImpl(COMPACT_FUNCTION)
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('f_add')
      JuliaFunctionSignatureImpl(FUNCTION_SIGNATURE)
        PsiElement(LEFT_BRACKET)('(')
        JuliaTypedNamedVariableImpl(TYPED_NAMED_VARIABLE)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('x')
        PsiElement(COMMA_SYM)(',')
        JuliaTypedNamedVariableImpl(TYPED_NAMED_VARIABLE)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('y')
        PsiElement(RIGHT_BRACKET)(')')
      PsiElement(EQ_SYM)('=')
      JuliaPlusLevelOpImpl(PLUS_LEVEL_OP)
        JuliaSymbolImpl(SYMBOL)
          PsiElement(SYM)('x')
        JuliaPlusLevelOperatorImpl(PLUS_LEVEL_OPERATOR)
          PsiElement(PLUS_SYM)('+')
        JuliaSymbolImpl(SYMBOL)
          PsiElement(SYM)('y')
    PsiComment(LINE_COMMENT)('# => "f (generic function with 1 method)"')
    PsiElement(EOL)('\n\n')
    JuliaCompactFunctionImpl(COMPACT_FUNCTION)
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('f')
      JuliaFunctionSignatureImpl(FUNCTION_SIGNATURE)
        PsiElement(LEFT_BRACKET)('(')
        JuliaTypedNamedVariableImpl(TYPED_NAMED_VARIABLE)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('x')
        PsiElement(COMMA_SYM)(',')
        JuliaTypedNamedVariableImpl(TYPED_NAMED_VARIABLE)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('y')
        PsiElement(RIGHT_BRACKET)(')')
      PsiElement(EQ_SYM)('=')
      JuliaPlusLevelOpImpl(PLUS_LEVEL_OP)
        JuliaSymbolImpl(SYMBOL)
          PsiElement(SYM)('x')
        JuliaPlusLevelOperatorImpl(PLUS_LEVEL_OPERATOR)
          PsiElement(PLUS_SYM)('+')
        JuliaSymbolImpl(SYMBOL)
          PsiElement(SYM)('y')
    PsiElement(COMMA_SYM)(',')
    JuliaPlusLevelOpImpl(PLUS_LEVEL_OP)
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('x')
      JuliaPlusLevelOperatorImpl(PLUS_LEVEL_OPERATOR)
        PsiElement(MINUS_SYM)('-')
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('y')
    PsiElement(EOL)('\n')
    JuliaApplyFunctionOpImpl(APPLY_FUNCTION_OP)
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('f')
      PsiElement(LEFT_BRACKET)('(')
      JuliaIntegerImpl(INTEGER)
        PsiElement(INT_LITERAL)('3')
      PsiElement(COMMA_SYM)(',')
      JuliaIntegerImpl(INTEGER)
        PsiElement(INT_LITERAL)('4')
      PsiElement(RIGHT_BRACKET)(')')
    PsiComment(LINE_COMMENT)('# => (7, -1)')
    PsiElement(EOL)('\n\n')
    JuliaFunctionImpl(FUNCTION)
      PsiElement(FUNCTION_KEYWORD)('function')
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('varargs')
      JuliaFunctionSignatureImpl(FUNCTION_SIGNATURE)
        PsiElement(LEFT_BRACKET)('(')
        JuliaTypedNamedVariableImpl(TYPED_NAMED_VARIABLE)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('args')
        PsiElement(SLICE_SYM)('...')
        PsiElement(RIGHT_BRACKET)(')')
      PsiElement(EOL)('\n')
      JuliaStatementsImpl(STATEMENTS)
        JuliaReturnExprImpl(RETURN_EXPR)
          PsiElement(RETURN_KEYWORD)('return')
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('args')
        PsiElement(EOL)('\n')
        PsiComment(LINE_COMMENT)('# use the keyword return to return anywhere in the function')
        PsiElement(EOL)('\n')
      PsiElement(END_KEYWORD)('end')
    PsiElement(EOL)('\n\n')
    PsiComment(LINE_COMMENT)('# => varargs (generic function with 1 method)')
    PsiElement(EOL)('\n\n')
    PsiComment(LINE_COMMENT)('# The ... is called a splat.')
    PsiElement(EOL)('\n')
    PsiComment(LINE_COMMENT)('# We just used it in a function definition.')
    PsiElement(EOL)('\n')
    PsiComment(LINE_COMMENT)('# It can also be used in a function call,')
    PsiElement(EOL)('\n')
    PsiComment(LINE_COMMENT)('# where it will splat an Array or Tuple's contents into the argument list.')
    PsiElement(EOL)('\n')
    JuliaApplyFunctionOpImpl(APPLY_FUNCTION_OP)
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('add')
      PsiElement(LEFT_BRACKET)('(')
      JuliaSpliceOpImpl(SPLICE_OP)
        JuliaArrayImpl(ARRAY)
          PsiElement(LEFT_M_BRACKET)('[')
          JuliaIntegerImpl(INTEGER)
            PsiElement(INT_LITERAL)('5')
          PsiElement(COMMA_SYM)(',')
          JuliaIntegerImpl(INTEGER)
            PsiElement(INT_LITERAL)('6')
          PsiElement(RIGHT_M_BRACKET)(']')
        PsiElement(SLICE_SYM)('...')
      PsiElement(RIGHT_BRACKET)(')')
    PsiComment(LINE_COMMENT)('# this is equivalent to add(5,6)')
    PsiElement(EOL)('\n\n')
    JuliaAssignOpImpl(ASSIGN_OP)
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('x')
      PsiElement(EQ_SYM)('=')
      JuliaTupleImpl(TUPLE)
        PsiElement(LEFT_BRACKET)('(')
        JuliaIntegerImpl(INTEGER)
          PsiElement(INT_LITERAL)('5')
        PsiElement(COMMA_SYM)(',')
        JuliaIntegerImpl(INTEGER)
          PsiElement(INT_LITERAL)('6')
        PsiElement(RIGHT_BRACKET)(')')
    PsiComment(LINE_COMMENT)('# => (5,6)')
    PsiElement(EOL)('\n')
    JuliaApplyFunctionOpImpl(APPLY_FUNCTION_OP)
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('add')
      PsiElement(LEFT_BRACKET)('(')
      JuliaSpliceOpImpl(SPLICE_OP)
        JuliaSymbolImpl(SYMBOL)
          PsiElement(SYM)('x')
        PsiElement(SLICE_SYM)('...')
      PsiElement(RIGHT_BRACKET)(')')
    PsiComment(LINE_COMMENT)('# this is equivalent to add(5,6)')
    PsiElement(EOL)('\n\n')
    PsiComment(LINE_COMMENT)('# You can define functions that take keyword arguments')
    PsiElement(EOL)('\n')
    JuliaFunctionImpl(FUNCTION)
      PsiElement(FUNCTION_KEYWORD)('function')
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('keyword_args')
      JuliaFunctionSignatureImpl(FUNCTION_SIGNATURE)
        PsiElement(LEFT_BRACKET)('(')
        PsiElement(SEMICOLON_SYM)(';')
        JuliaTypedNamedVariableImpl(TYPED_NAMED_VARIABLE)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('k1')
          PsiElement(EQ_SYM)('=')
          JuliaIntegerImpl(INTEGER)
            PsiElement(INT_LITERAL)('4')
        PsiElement(COMMA_SYM)(',')
        JuliaTypedNamedVariableImpl(TYPED_NAMED_VARIABLE)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('name2')
          PsiElement(EQ_SYM)('=')
          JuliaStringImpl(STRING)
            PsiElement(QUOTE_START)('"')
            JuliaStringContentImpl(STRING_CONTENT)
              PsiElement(REGULAR_STRING_PART_LITERAL)('hello')
            PsiElement(QUOTE_END)('"')
        PsiElement(RIGHT_BRACKET)(')')
      PsiComment(LINE_COMMENT)('# note the ;')
      PsiElement(EOL)('\n')
      JuliaStatementsImpl(STATEMENTS)
        JuliaReturnExprImpl(RETURN_EXPR)
          PsiElement(RETURN_KEYWORD)('return')
          JuliaApplyFunctionOpImpl(APPLY_FUNCTION_OP)
            JuliaSymbolImpl(SYMBOL)
              PsiElement(SYM)('Dict')
            PsiElement(LEFT_BRACKET)('(')
            JuliaArrowOpImpl(ARROW_OP)
              JuliaStringImpl(STRING)
                PsiElement(QUOTE_START)('"')
                JuliaStringContentImpl(STRING_CONTENT)
                  PsiElement(REGULAR_STRING_PART_LITERAL)('k1')
                PsiElement(QUOTE_END)('"')
              PsiElement(ARROW_SYM)('=>')
              JuliaSymbolImpl(SYMBOL)
                PsiElement(SYM)('k1')
            PsiElement(COMMA_SYM)(',')
            JuliaArrowOpImpl(ARROW_OP)
              JuliaStringImpl(STRING)
                PsiElement(QUOTE_START)('"')
                JuliaStringContentImpl(STRING_CONTENT)
                  PsiElement(REGULAR_STRING_PART_LITERAL)('name2')
                PsiElement(QUOTE_END)('"')
              PsiElement(ARROW_SYM)('=>')
              JuliaSymbolImpl(SYMBOL)
                PsiElement(SYM)('name2')
            PsiElement(RIGHT_BRACKET)(')')
        PsiElement(EOL)('\n')
      PsiElement(END_KEYWORD)('end')
    PsiElement(EOL)('\n\n')
    JuliaApplyFunctionOpImpl(APPLY_FUNCTION_OP)
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('keyword_args')
      PsiElement(LEFT_BRACKET)('(')
      JuliaAssignOpImpl(ASSIGN_OP)
        JuliaSymbolImpl(SYMBOL)
          PsiElement(SYM)('name2')
        PsiElement(EQ_SYM)('=')
        JuliaStringImpl(STRING)
          PsiElement(QUOTE_START)('"')
          JuliaStringContentImpl(STRING_CONTENT)
            PsiElement(REGULAR_STRING_PART_LITERAL)('ness')
          PsiElement(QUOTE_END)('"')
      PsiElement(RIGHT_BRACKET)(')')
    PsiComment(LINE_COMMENT)('# => ["name2"=>"ness","k1"=>4]')
    PsiElement(EOL)('\n')
    JuliaApplyFunctionOpImpl(APPLY_FUNCTION_OP)
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('keyword_args')
      PsiElement(LEFT_BRACKET)('(')
      JuliaAssignOpImpl(ASSIGN_OP)
        JuliaSymbolImpl(SYMBOL)
          PsiElement(SYM)('k1')
        PsiElement(EQ_SYM)('=')
        JuliaStringImpl(STRING)
          PsiElement(QUOTE_START)('"')
          JuliaStringContentImpl(STRING_CONTENT)
            PsiElement(REGULAR_STRING_PART_LITERAL)('mine')
          PsiElement(QUOTE_END)('"')
      PsiElement(RIGHT_BRACKET)(')')
    PsiComment(LINE_COMMENT)('# => ["k1"=>"mine","name2"=>"hello"]')
    PsiElement(EOL)('\n')
    JuliaApplyFunctionOpImpl(APPLY_FUNCTION_OP)
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('keyword_args')
      PsiElement(LEFT_BRACKET)('(')
      PsiElement(RIGHT_BRACKET)(')')
    PsiComment(LINE_COMMENT)('# => ["name2"=>"hello","k1"=>4]')
    PsiElement(EOL)('\n\n')
    PsiComment(LINE_COMMENT)('# You can combine all kinds of arguments in the same function')
    PsiElement(EOL)('\n')
    JuliaFunctionImpl(FUNCTION)
      PsiElement(FUNCTION_KEYWORD)('function')
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('all_the_args')
      JuliaFunctionSignatureImpl(FUNCTION_SIGNATURE)
        PsiElement(LEFT_BRACKET)('(')
        JuliaTypedNamedVariableImpl(TYPED_NAMED_VARIABLE)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('normal_arg')
        PsiElement(COMMA_SYM)(',')
        JuliaTypedNamedVariableImpl(TYPED_NAMED_VARIABLE)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('optional_positional_arg')
          PsiElement(EQ_SYM)('=')
          JuliaIntegerImpl(INTEGER)
            PsiElement(INT_LITERAL)('2')
        PsiElement(SEMICOLON_SYM)(';')
        JuliaTypedNamedVariableImpl(TYPED_NAMED_VARIABLE)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('keyword_arg')
          PsiElement(EQ_SYM)('=')
          JuliaStringImpl(STRING)
            PsiElement(QUOTE_START)('"')
            JuliaStringContentImpl(STRING_CONTENT)
              PsiElement(REGULAR_STRING_PART_LITERAL)('foo')
            PsiElement(QUOTE_END)('"')
        PsiElement(RIGHT_BRACKET)(')')
      PsiElement(EOL)('\n')
      JuliaStatementsImpl(STATEMENTS)
        JuliaApplyFunctionOpImpl(APPLY_FUNCTION_OP)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('println')
          PsiElement(LEFT_BRACKET)('(')
          JuliaStringImpl(STRING)
            PsiElement(QUOTE_START)('"')
            JuliaStringContentImpl(STRING_CONTENT)
              PsiElement(REGULAR_STRING_PART_LITERAL)('normal arg: ')
            JuliaTemplateImpl(TEMPLATE)
              PsiElement(SHORT_INTERPOLATE_SYM)('$')
              JuliaSymbolImpl(SYMBOL)
                PsiElement(SYM)('normal_arg')
            PsiElement(QUOTE_END)('"')
          PsiElement(RIGHT_BRACKET)(')')
        PsiElement(EOL)('\n')
        JuliaApplyFunctionOpImpl(APPLY_FUNCTION_OP)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('println')
          PsiElement(LEFT_BRACKET)('(')
          JuliaStringImpl(STRING)
            PsiElement(QUOTE_START)('"')
            JuliaStringContentImpl(STRING_CONTENT)
              PsiElement(REGULAR_STRING_PART_LITERAL)('optional arg: ')
            JuliaTemplateImpl(TEMPLATE)
              PsiElement(SHORT_INTERPOLATE_SYM)('$')
              JuliaSymbolImpl(SYMBOL)
                PsiElement(SYM)('optional_positional_arg')
            PsiElement(QUOTE_END)('"')
          PsiElement(RIGHT_BRACKET)(')')
        PsiElement(EOL)('\n')
        JuliaApplyFunctionOpImpl(APPLY_FUNCTION_OP)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('println')
          PsiElement(LEFT_BRACKET)('(')
          JuliaStringImpl(STRING)
            PsiElement(QUOTE_START)('"')
            JuliaStringContentImpl(STRING_CONTENT)
              PsiElement(REGULAR_STRING_PART_LITERAL)('keyword arg: ')
            JuliaTemplateImpl(TEMPLATE)
              PsiElement(SHORT_INTERPOLATE_SYM)('$')
              JuliaSymbolImpl(SYMBOL)
                PsiElement(SYM)('keyword_arg')
            PsiElement(QUOTE_END)('"')
          PsiElement(RIGHT_BRACKET)(')')
        PsiElement(EOL)('\n')
      PsiElement(END_KEYWORD)('end')
    PsiElement(EOL)('\n\n')
    JuliaApplyFunctionOpImpl(APPLY_FUNCTION_OP)
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('all_the_args')
      PsiElement(LEFT_BRACKET)('(')
      JuliaIntegerImpl(INTEGER)
        PsiElement(INT_LITERAL)('1')
      PsiElement(COMMA_SYM)(',')
      JuliaIntegerImpl(INTEGER)
        PsiElement(INT_LITERAL)('3')
      PsiElement(COMMA_SYM)(',')
      JuliaAssignOpImpl(ASSIGN_OP)
        JuliaSymbolImpl(SYMBOL)
          PsiElement(SYM)('keyword_arg')
        PsiElement(EQ_SYM)('=')
        JuliaIntegerImpl(INTEGER)
          PsiElement(INT_LITERAL)('4')
      PsiElement(RIGHT_BRACKET)(')')
    PsiElement(EOL)('\n')
    PsiComment(LINE_COMMENT)('# prints:')
    PsiElement(EOL)('\n')
    PsiComment(LINE_COMMENT)('#   normal arg: 1')
    PsiElement(EOL)('\n')
    PsiComment(LINE_COMMENT)('#   optional arg: 3')
    PsiElement(EOL)('\n')
    PsiComment(LINE_COMMENT)('#   keyword arg: 4')
    PsiElement(EOL)('\n\n')
    PsiComment(LINE_COMMENT)('# You can also name the internal function, if you want')
    PsiElement(EOL)('\n')
    JuliaFunctionImpl(FUNCTION)
      PsiElement(FUNCTION_KEYWORD)('function')
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('create_adder')
      JuliaFunctionSignatureImpl(FUNCTION_SIGNATURE)
        PsiElement(LEFT_BRACKET)('(')
        JuliaTypedNamedVariableImpl(TYPED_NAMED_VARIABLE)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('x')
        PsiElement(RIGHT_BRACKET)(')')
      PsiElement(EOL)('\n')
      JuliaStatementsImpl(STATEMENTS)
        JuliaFunctionImpl(FUNCTION)
          PsiElement(FUNCTION_KEYWORD)('function')
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('adder')
          JuliaFunctionSignatureImpl(FUNCTION_SIGNATURE)
            PsiElement(LEFT_BRACKET)('(')
            JuliaTypedNamedVariableImpl(TYPED_NAMED_VARIABLE)
              JuliaSymbolImpl(SYMBOL)
                PsiElement(SYM)('y')
            PsiElement(RIGHT_BRACKET)(')')
          PsiElement(EOL)('\n')
          JuliaStatementsImpl(STATEMENTS)
            JuliaPlusLevelOpImpl(PLUS_LEVEL_OP)
              JuliaSymbolImpl(SYMBOL)
                PsiElement(SYM)('x')
              JuliaPlusLevelOperatorImpl(PLUS_LEVEL_OPERATOR)
                PsiElement(PLUS_SYM)('+')
              JuliaSymbolImpl(SYMBOL)
                PsiElement(SYM)('y')
            PsiElement(EOL)('\n')
          PsiElement(END_KEYWORD)('end')
        PsiElement(EOL)('\n')
        JuliaSymbolImpl(SYMBOL)
          PsiElement(SYM)('adder')
        PsiElement(EOL)('\n')
      PsiElement(END_KEYWORD)('end')
    PsiElement(EOL)('\n\n')
    JuliaAssignOpImpl(ASSIGN_OP)
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('add_10')
      PsiElement(EQ_SYM)('=')
      JuliaApplyFunctionOpImpl(APPLY_FUNCTION_OP)
        JuliaSymbolImpl(SYMBOL)
          PsiElement(SYM)('create_adder')
        PsiElement(LEFT_BRACKET)('(')
        JuliaIntegerImpl(INTEGER)
          PsiElement(INT_LITERAL)('10')
        PsiElement(RIGHT_BRACKET)(')')
    PsiElement(EOL)('\n')
    JuliaApplyFunctionOpImpl(APPLY_FUNCTION_OP)
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('add_10')
      PsiElement(LEFT_BRACKET)('(')
      JuliaIntegerImpl(INTEGER)
        PsiElement(INT_LITERAL)('3')
      PsiElement(RIGHT_BRACKET)(')')
    PsiComment(LINE_COMMENT)('# => 13')
    PsiElement(EOL)('\n\n\n')
    PsiComment(LINE_COMMENT)('# You can define functions with optional positional arguments')
    PsiElement(EOL)('\n')
    JuliaFunctionImpl(FUNCTION)
      PsiElement(FUNCTION_KEYWORD)('function')
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('defaults')
      JuliaFunctionSignatureImpl(FUNCTION_SIGNATURE)
        PsiElement(LEFT_BRACKET)('(')
        JuliaTypedNamedVariableImpl(TYPED_NAMED_VARIABLE)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('a')
        PsiElement(COMMA_SYM)(',')
        JuliaTypedNamedVariableImpl(TYPED_NAMED_VARIABLE)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('b')
        PsiElement(COMMA_SYM)(',')
        JuliaTypedNamedVariableImpl(TYPED_NAMED_VARIABLE)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('x')
          PsiElement(EQ_SYM)('=')
          JuliaIntegerImpl(INTEGER)
            PsiElement(INT_LITERAL)('5')
        PsiElement(COMMA_SYM)(',')
        JuliaTypedNamedVariableImpl(TYPED_NAMED_VARIABLE)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('y')
          PsiElement(EQ_SYM)('=')
          JuliaIntegerImpl(INTEGER)
            PsiElement(INT_LITERAL)('6')
        PsiElement(RIGHT_BRACKET)(')')
      PsiElement(EOL)('\n')
      JuliaStatementsImpl(STATEMENTS)
        JuliaReturnExprImpl(RETURN_EXPR)
          PsiElement(RETURN_KEYWORD)('return')
          JuliaStringImpl(STRING)
            PsiElement(QUOTE_START)('"')
            JuliaTemplateImpl(TEMPLATE)
              PsiElement(SHORT_INTERPOLATE_SYM)('$')
              JuliaSymbolImpl(SYMBOL)
                PsiElement(SYM)('a')
            JuliaStringContentImpl(STRING_CONTENT)
              PsiElement(REGULAR_STRING_PART_LITERAL)(' ')
            JuliaTemplateImpl(TEMPLATE)
              PsiElement(SHORT_INTERPOLATE_SYM)('$')
              JuliaSymbolImpl(SYMBOL)
                PsiElement(SYM)('b')
            JuliaStringContentImpl(STRING_CONTENT)
              PsiElement(REGULAR_STRING_PART_LITERAL)(' and ')
            JuliaTemplateImpl(TEMPLATE)
              PsiElement(SHORT_INTERPOLATE_SYM)('$')
              JuliaSymbolImpl(SYMBOL)
                PsiElement(SYM)('x')
            JuliaStringContentImpl(STRING_CONTENT)
              PsiElement(REGULAR_STRING_PART_LITERAL)(' ')
            JuliaTemplateImpl(TEMPLATE)
              PsiElement(SHORT_INTERPOLATE_SYM)('$')
              JuliaSymbolImpl(SYMBOL)
                PsiElement(SYM)('y')
            PsiElement(QUOTE_END)('"')
        PsiElement(EOL)('\n')
      PsiElement(END_KEYWORD)('end')
    PsiElement(EOL)('\n\n')
    JuliaApplyFunctionOpImpl(APPLY_FUNCTION_OP)
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('defaults')
      PsiElement(LEFT_BRACKET)('(')
      JuliaCharLitImpl(CHAR_LIT)
        PsiElement(CHAR_LITERAL)(''h'')
      PsiElement(COMMA_SYM)(',')
      JuliaCharLitImpl(CHAR_LIT)
        PsiElement(CHAR_LITERAL)(''g'')
      PsiElement(RIGHT_BRACKET)(')')
    PsiComment(LINE_COMMENT)('# => "h g and 5 6"')
    PsiElement(EOL)('\n')
    JuliaApplyFunctionOpImpl(APPLY_FUNCTION_OP)
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('defaults')
      PsiElement(LEFT_BRACKET)('(')
      JuliaCharLitImpl(CHAR_LIT)
        PsiElement(CHAR_LITERAL)(''h'')
      PsiElement(COMMA_SYM)(',')
      JuliaCharLitImpl(CHAR_LIT)
        PsiElement(CHAR_LITERAL)(''g'')
      PsiElement(COMMA_SYM)(',')
      JuliaCharLitImpl(CHAR_LIT)
        PsiElement(CHAR_LITERAL)(''j'')
      PsiElement(RIGHT_BRACKET)(')')
    PsiComment(LINE_COMMENT)('# => "h g and j 6"')
    PsiElement(EOL)('\n')
    JuliaApplyFunctionOpImpl(APPLY_FUNCTION_OP)
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('defaults')
      PsiElement(LEFT_BRACKET)('(')
      JuliaCharLitImpl(CHAR_LIT)
        PsiElement(CHAR_LITERAL)(''h'')
      PsiElement(COMMA_SYM)(',')
      JuliaCharLitImpl(CHAR_LIT)
        PsiElement(CHAR_LITERAL)(''g'')
      PsiElement(COMMA_SYM)(',')
      JuliaCharLitImpl(CHAR_LIT)
        PsiElement(CHAR_LITERAL)(''j'')
      PsiElement(COMMA_SYM)(',')
      JuliaCharLitImpl(CHAR_LIT)
        PsiElement(CHAR_LITERAL)(''k'')
      PsiElement(RIGHT_BRACKET)(')')
    PsiComment(LINE_COMMENT)('# => "h g and j k"')
    PsiElement(EOL)('\n')
    JuliaTryCatchImpl(TRY_CATCH)
      PsiElement(TRY_KEYWORD)('try')
      PsiElement(EOL)('\n')
      JuliaStatementsImpl(STATEMENTS)
        JuliaApplyFunctionOpImpl(APPLY_FUNCTION_OP)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('defaults')
          PsiElement(LEFT_BRACKET)('(')
          JuliaCharLitImpl(CHAR_LIT)
            PsiElement(CHAR_LITERAL)(''h'')
          PsiElement(RIGHT_BRACKET)(')')
        PsiComment(LINE_COMMENT)('# => ERROR: no method defaults(Char,)')
        PsiElement(EOL)('\n')
        JuliaApplyFunctionOpImpl(APPLY_FUNCTION_OP)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('defaults')
          PsiElement(LEFT_BRACKET)('(')
          PsiElement(RIGHT_BRACKET)(')')
        PsiComment(LINE_COMMENT)('# => ERROR: no methods defaults()')
        PsiElement(EOL)('\n')
      JuliaCatchClauseImpl(CATCH_CLAUSE)
        PsiElement(CATCH_KEYWORD)('catch')
        JuliaSymbolImpl(SYMBOL)
          PsiElement(SYM)('e')
        PsiElement(EOL)('\n')
        JuliaStatementsImpl(STATEMENTS)
          JuliaApplyFunctionOpImpl(APPLY_FUNCTION_OP)
            JuliaSymbolImpl(SYMBOL)
              PsiElement(SYM)('println')
            PsiElement(LEFT_BRACKET)('(')
            JuliaSymbolImpl(SYMBOL)
              PsiElement(SYM)('e')
            PsiElement(RIGHT_BRACKET)(')')
          PsiElement(EOL)('\n')
      PsiElement(END_KEYWORD)('end')
    PsiElement(EOL)('\n\n')
    PsiComment(LINE_COMMENT)('# There are built-in higher order functions')
    PsiElement(EOL)('\n')
    JuliaApplyFunctionOpImpl(APPLY_FUNCTION_OP)
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('map')
      PsiElement(LEFT_BRACKET)('(')
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('add_10')
      PsiElement(COMMA_SYM)(',')
      JuliaArrayImpl(ARRAY)
        PsiElement(LEFT_M_BRACKET)('[')
        JuliaIntegerImpl(INTEGER)
          PsiElement(INT_LITERAL)('1')
        PsiElement(COMMA_SYM)(',')
        JuliaIntegerImpl(INTEGER)
          PsiElement(INT_LITERAL)('2')
        PsiElement(COMMA_SYM)(',')
        JuliaIntegerImpl(INTEGER)
          PsiElement(INT_LITERAL)('3')
        PsiElement(RIGHT_M_BRACKET)(']')
      PsiElement(RIGHT_BRACKET)(')')
    PsiComment(LINE_COMMENT)('# => [11, 12, 13]')
    PsiElement(EOL)('\n')
    JuliaApplyFunctionOpImpl(APPLY_FUNCTION_OP)
      JuliaSymbolImpl(SYMBOL)
        PsiElement(SYM)('filter')
      PsiElement(LEFT_BRACKET)('(')
      JuliaLambdaImpl(LAMBDA)
        JuliaSymbolImpl(SYMBOL)
          PsiElement(SYM)('x')
        PsiElement(LAMBDA_ABSTRACTION)('->')
        JuliaComparisonLevelOpImpl(COMPARISON_LEVEL_OP)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('x')
          JuliaComparisonLevelOperatorImpl(COMPARISON_LEVEL_OPERATOR)
            PsiElement(GREATER_THAN_SYM)('>')
          JuliaIntegerImpl(INTEGER)
            PsiElement(INT_LITERAL)('5')
      PsiElement(COMMA_SYM)(',')
      JuliaArrayImpl(ARRAY)
        PsiElement(LEFT_M_BRACKET)('[')
        JuliaIntegerImpl(INTEGER)
          PsiElement(INT_LITERAL)('3')
        PsiElement(COMMA_SYM)(',')
        JuliaIntegerImpl(INTEGER)
          PsiElement(INT_LITERAL)('4')
        PsiElement(COMMA_SYM)(',')
        JuliaIntegerImpl(INTEGER)
          PsiElement(INT_LITERAL)('5')
        PsiElement(COMMA_SYM)(',')
        JuliaIntegerImpl(INTEGER)
          PsiElement(INT_LITERAL)('6')
        PsiElement(COMMA_SYM)(',')
        JuliaIntegerImpl(INTEGER)
          PsiElement(INT_LITERAL)('7')
        PsiElement(RIGHT_M_BRACKET)(']')
      PsiElement(RIGHT_BRACKET)(')')
    PsiComment(LINE_COMMENT)('# => [6, 7]')
    PsiElement(EOL)('\n\n')
    PsiComment(LINE_COMMENT)('# We can use list comprehensions for nicer maps')
    PsiElement(EOL)('\n')
    JuliaForComprehensionImpl(FOR_COMPREHENSION)
      PsiElement(LEFT_M_BRACKET)('[')
      JuliaComprehensionElementImpl(COMPREHENSION_ELEMENT)
        JuliaApplyFunctionOpImpl(APPLY_FUNCTION_OP)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('add_10')
          PsiElement(LEFT_BRACKET)('(')
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('i')
          PsiElement(RIGHT_BRACKET)(')')
        PsiElement(FOR_KEYWORD)('for')
        JuliaSingleComprehensionImpl(SINGLE_COMPREHENSION)
          JuliaSingleIndexerImpl(SINGLE_INDEXER)
            JuliaSymbolImpl(SYMBOL)
              PsiElement(SYM)('i')
            PsiElement(EQ_SYM)('=')
            JuliaArrayImpl(ARRAY)
              PsiElement(LEFT_M_BRACKET)('[')
              JuliaIntegerImpl(INTEGER)
                PsiElement(INT_LITERAL)('1')
              PsiElement(COMMA_SYM)(',')
              JuliaIntegerImpl(INTEGER)
                PsiElement(INT_LITERAL)('2')
              PsiElement(COMMA_SYM)(',')
              JuliaIntegerImpl(INTEGER)
                PsiElement(INT_LITERAL)('3')
              PsiElement(RIGHT_M_BRACKET)(']')
      PsiElement(RIGHT_M_BRACKET)(']')
    PsiComment(LINE_COMMENT)('# => [11, 12, 13]')
    PsiElement(EOL)('\n')
    JuliaForComprehensionImpl(FOR_COMPREHENSION)
      PsiElement(LEFT_M_BRACKET)('[')
      JuliaComprehensionElementImpl(COMPREHENSION_ELEMENT)
        JuliaApplyFunctionOpImpl(APPLY_FUNCTION_OP)
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('add_10')
          PsiElement(LEFT_BRACKET)('(')
          JuliaSymbolImpl(SYMBOL)
            PsiElement(SYM)('i')
          PsiElement(RIGHT_BRACKET)(')')
        PsiElement(FOR_KEYWORD)('for')
        JuliaSingleComprehensionImpl(SINGLE_COMPREHENSION)
          JuliaSingleIndexerImpl(SINGLE_INDEXER)
            JuliaSymbolImpl(SYMBOL)
              PsiElement(SYM)('i')
            PsiElement(IN_KEYWORD)('in')
            JuliaArrayImpl(ARRAY)
              PsiElement(LEFT_M_BRACKET)('[')
              JuliaIntegerImpl(INTEGER)
                PsiElement(INT_LITERAL)('1')
              PsiElement(COMMA_SYM)(',')
              JuliaIntegerImpl(INTEGER)
                PsiElement(INT_LITERAL)('2')
              PsiElement(COMMA_SYM)(',')
              JuliaIntegerImpl(INTEGER)
                PsiElement(INT_LITERAL)('3')
              PsiElement(RIGHT_M_BRACKET)(']')
      PsiElement(RIGHT_M_BRACKET)(']')
  PsiComment(LINE_COMMENT)('# => [11, 12, 13]')